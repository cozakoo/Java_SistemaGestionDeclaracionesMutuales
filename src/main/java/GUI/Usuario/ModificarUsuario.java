package GUI.Usuario;

import interfaz.UpdateListener;
import com.mycompany.mutuales.DataBase;
import com.mycompany.mutuales.Usuario;
import com.mycompany.mutuales.Utilidades;
import interfaz.iCargaImagenes;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import org.mindrot.jbcrypt.BCrypt;

public class ModificarUsuario extends javax.swing.JFrame {

    private UpdateListener update;
    private String userNameOrigin;
    private boolean isFirtTyped;

    public ModificarUsuario(String UserName, UpdateListener update) {
        try {

            this.userNameOrigin = UserName;
            this.update = update;

            initComponents();
            cargarImagenes();
            cargarDatos();
            configComponents();
        } catch (SQLException ex) {
            Logger.getLogger(ModificarUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public ModificarUsuario(String UserName) {
        try {
            this.userNameOrigin = UserName;
            this.update = update;
            initComponents();
//        caragarImagenes();
            cargarDatos();
            configComponents();
        } catch (SQLException ex) {
            Logger.getLogger(ModificarUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        javax.swing.JPanel jPanel3 = new javax.swing.JPanel();
        javax.swing.JLabel jLabel = new javax.swing.JLabel();
        UserNameTextField1 = new javax.swing.JTextField();
        ModificarButton = new javax.swing.JLabel();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel5 = new javax.swing.JLabel();
        javax.swing.JPanel jPanel2 = new javax.swing.JPanel();
        EditUserjLabel = new javax.swing.JLabel();
        EditPassjLabel = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(252, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(252, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        jLabel.setForeground(new java.awt.Color(102, 102, 102));
        jLabel.setText("username:");
        jPanel3.add(jLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, -1, -1));
        jPanel3.add(UserNameTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 130, 110, -1));

        ModificarButton.setFont(new java.awt.Font("Roboto Black", 0, 12)); // NOI18N
        ModificarButton.setForeground(new java.awt.Color(102, 102, 102));
        ModificarButton.setText("Modificar");
        ModificarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ModificarButtonMouseClicked(evt);
            }
        });
        jPanel3.add(ModificarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 270, 130, 40));

        jLabel3.setBackground(new java.awt.Color(51, 51, 51));
        jLabel3.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("MODIFICACION DE USUARIO ");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, -1, -1));

        jLabel5.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Contraseña:");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 200, -1, -1));

        jPanel2.setBackground(new java.awt.Color(0, 153, 204));
        jPanel3.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 370, 540, -1));

        EditUserjLabel.setText("Editar username");
        EditUserjLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EditUserjLabelMouseClicked(evt);
            }
        });
        jPanel3.add(EditUserjLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 124, -1, 30));

        EditPassjLabel.setText("Editar contraseña");
        EditPassjLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EditPassjLabelMouseClicked(evt);
            }
        });
        jPanel3.add(EditPassjLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 194, -1, 30));

        jPasswordField1.setText("jPasswordField1");
        jPasswordField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyTyped(evt);
            }
        });
        jPanel3.add(jPasswordField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 198, 110, -1));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 380));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 380));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ModificarButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ModificarButtonMouseClicked

        if (Utilidades.mensajeConfirmar("¿Desea confirmar los cambios?", "Confirmar modificación")) {
            if (!userNameOrigin.equals(UserNameTextField1.getText()) && !jPasswordField1.getText().isEmpty()) {
                deleteUser(UserNameTextField1.getText());
                new Usuario(UserNameTextField1.getText(), jPasswordField1.getText()).insertarEnBaseDeDatos();

                Utilidades.mensajeExito("Modificación exitosa!");
                this.dispose();
            }
            if (!userNameOrigin.equals(UserNameTextField1.getText()) && jPasswordField1.getText().isEmpty()) {
                updateUserName(userNameOrigin, UserNameTextField1.getText());
                Utilidades.mensajeExito("Modificación exitosa!");
                this.dispose();
            }

            if (userNameOrigin.equals(UserNameTextField1.getText()) && !jPasswordField1.getText().isEmpty()) {
                ChangePassw(jPasswordField1.getText());
                Utilidades.mensajeExito("Modificación exitosa!");
                this.dispose();
            }

            if (update != null) {
                update.updateTableData();
            }
        }
    }//GEN-LAST:event_ModificarButtonMouseClicked

    private void EditUserjLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditUserjLabelMouseClicked
        if (!UserNameTextField1.isEditable()) {
            UserNameTextField1.setEditable(true);
        } else {
            UserNameTextField1.setEditable(false);
        }
    }//GEN-LAST:event_EditUserjLabelMouseClicked

    private void jPasswordField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyTyped
        if (isFirtTyped) {
            jPasswordField1.setText("");
            isFirtTyped = false;
        }
    }//GEN-LAST:event_jPasswordField1KeyTyped

    private void EditPassjLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditPassjLabelMouseClicked
        if (!jPasswordField1.isEditable()) {
            jPasswordField1.setEditable(true);
        } else {
            jPasswordField1.setEditable(false);
        }
    }//GEN-LAST:event_EditPassjLabelMouseClicked

    private void jPasswordField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyPressed
        if (isFirtTyped) {
            jPasswordField1.setText("");
            isFirtTyped = false;
        }
    }//GEN-LAST:event_jPasswordField1KeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JLabel EditPassjLabel;
    javax.swing.JLabel EditUserjLabel;
    javax.swing.JLabel ModificarButton;
    javax.swing.JTextField UserNameTextField1;
    javax.swing.JPasswordField jPasswordField1;
    // End of variables declaration//GEN-END:variables

    private void cargarDatos() throws SQLException {
        UserNameTextField1.setText(userNameOrigin);

        //Password.setText(mutual.getDescripcion());
    }

    private void configComponents() {
        UserNameTextField1.setEditable(false);
        jPasswordField1.setText("");
        jPasswordField1.setEditable(false);

        System.out.println(jPasswordField1.getText());
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    private void deleteUser(String userName) {
        DataBase.getInstance(true).consulta("DELETE FROM usuario WHERE username = '" + userNameOrigin + "'");
    }

    private void updateUserName(String userNameOrigin, String nuevoUserName) {
        DataBase.getInstance(true).consulta(
                "UPDATE usuario\n"
                + "SET username = '" + nuevoUserName + "'"
                + "WHERE username = '" + userNameOrigin + "'");

    }

    private void ChangePassw(String nuevaContrasenia) {
        String hashedPassword = BCrypt.hashpw(nuevaContrasenia, BCrypt.gensalt());
        DataBase.getInstance(true).consulta(
                "UPDATE usuario\n"
                + "SET clave = '" + hashedPassword + "'"
                + "WHERE username = '" + userNameOrigin + "'");
    }

    private void cargarImagenes() {
        String dirActual = System.getProperty("user.dir");

        EditPassjLabel.setIcon(new javax.swing.ImageIcon(dirActual + iCargaImagenes.url_imagen_editar));
        EditUserjLabel.setIcon(new javax.swing.ImageIcon(dirActual + iCargaImagenes.url_imagen_editar));
        ModificarButton.setIcon(new javax.swing.ImageIcon(dirActual + iCargaImagenes.url_imagen_rigth));
        try {
            BufferedImage iconImage = ImageIO.read(new File(dirActual + "\\images\\icono.png"));

            // Establecer la imagen como ícono de la aplicación
            this.setIconImage(iconImage);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
